#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
 Authors: A. Ramirez-Morales (andres.ramirez.morales@cern.ch)
          H. Garcia-Tecocoatzi
"""
import numpy as np


def states_decay():
    MassA = np.array([2.797, 2.832, 2.951, 2.980, 2.987, 3.016, 3.076, 2.951, 2.980, 2.987, 3.016, 3.076])
    MassB = np.array([2.578, 2.578, 2.578, 2.578, 2.578, 2.578, 2.578, 2.453, 2.453, 2.453, 2.453, 2.453])
    MassC = np.array([0.140, 0.140, 0.140, 0.140, 0.140, 0.140, 0.140, 0.493, 0.493, 0.493, 0.493, 0.493])
    SA_qm = np.array([  1/2,   1/2,   1/2,   3/2,   1/2,   3/2,   3/2,   1/2,   3/2,   1/2,   3/2,   3/2])
    LA_qm = np.array([    1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1])
    JA_qm = np.array([  1/2,   3/2,   1/2,   1/2,   3/2,   3/2,   5/2,   1/2,   1/2,   3/2,   3/2,   5/2])
    SB_qm = np.array([  1/2,   1/2,   1/2,   1/2,   1/2,   1/2,   1/2,   1/2,   1/2,   1/2,   1/2,   1/2])
    SL_qm = np.array([    0,     0,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1])
    ModEx = np.array([    1,     1,     2,     2,     2,     2,     2,     2,     2,     2,     2,     2]) # lam =1 , rho=2
    decPr = np.array([    1,     1,     1,     1,     1,     1,     1,     2,     2,     2,     2,     2]) # decayProduct 1st, 2nd

def states_mass(baryons):
    # omega states
    if(baryons=='omegas'):              
        state    = np.array(['omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg'])
        sum_mass = np.array([ 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505])
        J_tot    = np.array([  1/2,  3/2,  1/2,  1/2,  3/2,  3/2,  5/2,  1/2,  3/2,  3/2,  5/2,  1/2,  3/2,  5/2,  7/2,  1/2,  3/2,  1/2,  3/2,  3/2,  5/2,  1/2,  3/2,  1/2,  3/2,  5/2,  1/2,  3/2,  5/2,  7/2])
        S_tot    = np.array([  1/2,  3/2,  1/2,  3/2,  1/2,  3/2,  3/2,  1/2,  1/2,  1/2,  1/2,  3/2,  3/2,  3/2,  3/2,  1/2,  3/2,  1/2,  3/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  3/2,  3/2,  3/2,  3/2])
        L_tot    = np.array([    0,    0,    1,    1,    1,    1,    1,    1,    1,    2,    2,    2,    2,    2,    2,    0,    0,    0,    0,    2,    2,    1,    1,    0,    2,    2,    2,    2,    2,    2])
        I_tot    = np.array([    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0])
        SU_tot   = np.array([ 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3])
        HO_n     = np.array([    0,    0,    1,    1,    1,    1,    1,    1,    1,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2])
        SL       = np.array([    1,    1,    1,    1,    1,    1,    1,    0,    0,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    0,    0,    0,    0,    0,    1,    1,    1,    1,    1,    1])        
        ModEx    = np.array(['grd','grd','lam','lam','lam','lam','lam','rho','rho','lam','lam','lam','lam','lam','lam','rpl','rpl','rpr','rpr','mix','mix','mix','mix','mix','rho','rho','rho','rho','rho','rho'])
        # lam =1 , rho=2, rpl=3, rpr=4, mix = 5
        # cascade states 6-plet
    elif(baryons=='cascades'):
        state    = np.array(['cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas'])
        sum_mass = np.array([ 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350])
        J_tot    = np.array([  1/2,  3/2,  1/2,  1/2,  3/2,  3/2,  5/2,  1/2,  3/2,  3/2,  5/2,  1/2,  3/2,  5/2,  7/2,  1/2,  3/2,  1/2,  3/2,  3/2,  5/2,  1/2,  3/2,  1/2,  3/2,  5/2,  1/2,  3/2,  5/2,  7/2])
        S_tot    = np.array([  1/2,  3/2,  1/2,  3/2,  1/2,  3/2,  3/2,  1/2,  1/2,  1/2,  1/2,  3/2,  3/2,  3/2,  3/2,  1/2,  3/2,  1/2,  3/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  3/2,  3/2,  3/2,  3/2])
        L_tot    = np.array([    0,    0,    1,    1,    1,    1,    1,    1,    1,    2,    2,    2,    2,    2,    2,    0,    0,    0,    0,    2,    2,    1,    1,    0,    2,    2,    2,    2,    2,    2])
        I_tot    = np.array([  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2])    
        SU_tot   = np.array([ 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3])
        HO_n     = np.array([    0,    0,    1,    1,    1,    1,    1,    1,    1,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2])
        SL       = np.array([    1,    1,    1,    1,    1,    1,    1,    0,    0,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    0,    0,    0,    0,    0,    1,    1,    1,    1,    1,    1])
        ModEx    = np.array(['grd','grd','lam','lam','lam','lam','lam','rho','rho','lam','lam','lam','lam','lam','lam','rpl','rpl','rpr','rpr','mix','mix','mix','mix','mix','rho','rho','rho','rho','rho','rho'])
        # lam =1 , rho=2
        # sigma states
    elif(baryons=='sigmas'):
        state    = np.array(['sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig'])
        sum_mass = np.array([ 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195])
        J_tot    = np.array([  1/2,  3/2,  1/2,  1/2,  3/2,  3/2,  5/2,  1/2,  3/2,  3/2,  5/2,  1/2,  3/2,  5/2,  7/2,  1/2,  3/2,  1/2,  3/2,  3/2,  5/2,  1/2,  3/2,  1/2,  3/2,  5/2,  1/2,  3/2,  5/2,  7/2])        
        S_tot    = np.array([  1/2,  3/2,  1/2,  3/2,  1/2,  3/2,  3/2,  1/2,  1/2,  1/2,  1/2,  3/2,  3/2,  3/2,  3/2,  1/2,  3/2,  1/2,  3/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  3/2,  3/2,  3/2,  3/2])
        L_tot    = np.array([    0,    0,    1,    1,    1,    1,    1,    1,    1,    2,    2,    2,    2,    2,    2,    0,    0,    0,    0,    2,    2,    1,    1,    0,    2,    2,    2,    2,    2,    2])        
        I_tot    = np.array([    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1])        
        SU_tot   = np.array([ 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3])
        HO_n     = np.array([    0,    0,    1,    1,    1,    1,    1,    1,    1,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2])
        SL       = np.array([    1,    1,    1,    1,    1,    1,    1,    0,    0,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    0,    0,    0,    0,    0,    1,    1,    1,    1,    1,    1])
        ModEx    = np.array(['grd','grd','lam','lam','lam','lam','lam','rho','rho','lam','lam','lam','lam','lam','lam','rpl','rpl','rpr','rpr','mix','mix','mix','mix','mix','rho','rho','rho','rho','rho','rho'])
        # lam =1 , rho=2
        # lambda states
    elif(baryons=='lambdas'):
        state    = np.array(['Lam','Lam','Lam','Lam','Lam','Lam','Lam','Lam','Lam','Lam','Lam','Lam','Lam','Lam','Lam','Lam','Lam','Lam','Lam','Lam','Lam','Lam','Lam','Lam','Lam','Lam','Lam'])
        sum_mass = np.array([ 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195])
        J_tot    = np.array([  1/2,  1/2,  3/2,  1/2,  1/2,  3/2,  3/2,  5/2,  3/2,  5/2,  1/2,  1/2,  3/2,  5/2,  1/2,  3/2,  5/2,  7/2,  1/2,  3/2,  1/2,  3/2,  5/2,  3/2,  1/2,  3/2,  5/2])
        S_tot    = np.array([  1/2,  1/2,  1/2,  1/2,  3/2,  1/2,  3/2,  3/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  3/2,  3/2,  3/2,  3/2,  1/2,  1/2,  3/2,  3/2,  3/2,  3/2,  1/2,  1/2,  1/2])        
        L_tot    = np.array([    0,    1,    1,    1,    1,    1,    1,    1,    2,    2,    0,    0,    2,    2,    2,    2,    2,    2,    1,    1,    1,    1,    1,    0,    0,    2,    2])
        I_tot    = np.array([    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0])
        SU_tot   = np.array([  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3])
        HO_n     = np.array([    0,    1,    1,    1,    1,    1,    1,    1,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2])
        SL       = np.array([    0,    0,    0,    1,    1,    1,    1,    1,    0,    0,    0,    0,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    0,    0])
        ModEx    = np.array(['grd','lam','lam','rho','rho','rho','rho','rho','lam','lam','rpl','rpr','mix','mix','mix','mix','mix','mix','mix','mix','mix','mix','mix','mix','mix','rho','rho'])
        # cascades anti-triplet states
    elif(baryons=='cascades_anti3'):
        state    = np.array(['tri','tri','tri','tri','tri','tri','tri','tri','tri','tri','tri','tri','tri','tri','tri','tri','tri','tri','tri','tri','tri','tri','tri','tri','tri','tri','tri'])
        sum_mass = np.array([ 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350])
        J_tot    = np.array([  1/2,  1/2,  3/2,  1/2,  1/2,  3/2,  3/2,  5/2,  3/2,  5/2,  1/2,  1/2,  3/2,  5/2,  1/2,  3/2,  5/2,  7/2,  1/2,  3/2,  1/2,  3/2,  5/2,  3/2,  1/2,  3/2,  5/2])
        S_tot    = np.array([  1/2,  1/2,  1/2,  1/2,  3/2,  1/2,  3/2,  3/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  3/2,  3/2,  3/2,  3/2,  1/2,  1/2,  3/2,  3/2,  3/2,  3/2,  1/2,  1/2,  1/2])
        L_tot    = np.array([    0,    1,    1,    1,    1,    1,    1,    1,    2,    2,    0,    0,    2,    2,    2,    2,    2,    2,    1,    1,    1,    1,    1,    0,    0,    2,    2])
        I_tot    = np.array([  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2])        
        SU_tot   = np.array([  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3,  4/3])
        HO_n     = np.array([    0,    1,    1,    1,    1,    1,    1,    1,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2])
        SL       = np.array([    0,    0,    0,    1,    1,    1,    1,    1,    0,    0,    0,    0,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    0,    0])
        ModEx    = np.array(['grd','lam','lam','rho','rho','rho','rho','rho','lam','lam','rpl','rpr','mix','mix','mix','mix','mix','mix','mix','mix','mix','mix','mix','mix','mix','rho','rho'])

    return state,sum_mass,J_tot,S_tot,L_tot,I_tot,SU_tot,HO_n,SL,ModEx


def states_mass_diquark(baryons):
    # omega states
    if(baryons=='omegas'):
        state    = np.array(['omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg','omg'])
        sum_mass = np.array([ 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505])        
        J_tot    = np.array([  1/2,  3/2,  1/2,  1/2,  3/2,  3/2,  5/2,  3/2,  5/2,  1/2,  3/2,  5/2,  7/2,  1/2,  3/2])
        S_tot    = np.array([  1/2,  3/2,  1/2,  3/2,  1/2,  3/2,  3/2,  1/2,  1/2,  3/2,  3/2,  3/2,  3/2,  1/2,  3/2])
        L_tot    = np.array([    0,    0,    1,    1,    1,    1,    1,    2,    2,    2,    2,    2,    2,    0,    0])
        I_tot    = np.array([    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0])
        SU_tot   = np.array([ 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3])
        HO_n     = np.array([    0,    0,    1,    1,    1,    1,    1,    2,    2,    2,    2,    2,    2,    2,    2])       
        SL       = np.array([    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1])
        ModEx    = np.array(['grd','grd','lam','lam','lam','lam','lam','lam','lam','lam','lam','lam','lam','rpl','rpl'])
        # lam =1 , rho=2, rpl=3, rpr=4, mix = 5
        # cascade states 6-plet
    elif(baryons=='cascades'):
        state    = np.array(['cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas','cas'])
        sum_mass = np.array([ 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350])
        J_tot    = np.array([  1/2,  3/2,  1/2,  1/2,  3/2,  3/2,  5/2,  3/2,  5/2,  1/2,  3/2,  5/2,  7/2,  1/2,  3/2])
        S_tot    = np.array([  1/2,  3/2,  1/2,  3/2,  1/2,  3/2,  3/2,  1/2,  1/2,  3/2,  3/2,  3/2,  3/2,  1/2,  3/2])
        L_tot    = np.array([    0,    0,    1,    1,    1,    1,    1,    2,    2,    2,    2,    2,    2,    0,    0])
        I_tot    = np.array([  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2,  1/2])
        SU_tot   = np.array([ 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3])
        HO_n     = np.array([    0,    0,    1,    1,    1,    1,    1,    2,    2,    2,    2,    2,    2,    2,    2])
        SL       = np.array([    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1])
        ModEx    = np.array(['grd','grd','lam','lam','lam','lam','lam','lam','lam','lam','lam','lam','lam','rpl','rpl'])
        # sigma states
    elif(baryons=='sigmas'):
        state    = np.array(['sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig','sig'])
        sum_mass = np.array([ 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195])
        J_tot    = np.array([  1/2,  3/2,  1/2,  1/2,  3/2,  3/2,  5/2,  3/2,  5/2,  1/2,  3/2,  5/2,  7/2,  1/2,  3/2])
        S_tot    = np.array([  1/2,  3/2,  1/2,  3/2,  1/2,  3/2,  3/2,  1/2,  1/2,  3/2,  3/2,  3/2,  3/2,  1/2,  3/2])
        L_tot    = np.array([    0,    0,    1,    1,    1,    1,    1,    2,    2,    2,    2,    2,    2,    0,    0])
        I_tot    = np.array([    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1])
        SU_tot   = np.array([ 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3, 10/3])
        HO_n     = np.array([    0,    0,    1,    1,    1,    1,    1,    2,    2,    2,    2,    2,    2,    2,    2])                
        SL       = np.array([    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1])
        ModEx    = np.array(['grd','grd','lam','lam','lam','lam','lam','lam','lam','lam','lam','lam','lam','rpl','rpl']) # lam =1 , rho=2
        # lambda states
    elif(baryons=='lambdas'):
        state    = np.array(['Lam','Lam','Lam','Lam','Lam','Lam'])
        sum_mass = np.array([ 2195, 2195, 2195, 2195, 2195, 2195])
        J_tot    = np.array([  1/2,  1/2,  3/2,  3/2,  5/2,  1/2])
        S_tot    = np.array([  1/2,  1/2,  1/2,  1/2,  1/2,  1/2])
        L_tot    = np.array([    0,    1,    1,    2,    2,    0])
        I_tot    = np.array([    0,    0,    0,    0,    0,    0])
        SU_tot   = np.array([  4/3,  4/3,  4/3,  4/3,  4/3,  4/3])
        HO_n     = np.array([    0,    1,    1,    2,    2,    2])
        SL       = np.array([    0,    0,    0,    0,    0,    0])
        ModEx    = np.array(['grd','lam','lam','lam','lam','rpl'])
        # cascades anti-triplet states
    elif(baryons=='cascades_anti3'):        
        state    = np.array(['tri','tri','tri','tri','tri','tri'])
        sum_mass = np.array([ 2350, 2350, 2350, 2350, 2350, 2350])
        J_tot    = np.array([  1/2,  1/2,  3/2,  3/2,  5/2,  1/2])
        S_tot    = np.array([  1/2,  1/2,  1/2,  1/2,  1/2,  1/2])
        L_tot    = np.array([    0,    1,    1,    2,    2,    0])
        I_tot    = np.array([  1/2,  1/2,  1/2,  1/2,  1/2,  1/2])
        SU_tot   = np.array([  4/3,  4/3,  4/3,  4/3,  4/3,  4/3])
        HO_n     = np.array([    0,    1,    1,    2,    2,    2])
        SL       = np.array([    0,    0,    0,    0,    0,    0])
        ModEx    = np.array(['grd','lam','lam','lam','lam','rpl'])

    return state,sum_mass,J_tot,S_tot,L_tot,I_tot,SU_tot,HO_n,SL,ModEx
